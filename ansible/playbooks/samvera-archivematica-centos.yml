- hosts: all
  name: Configure server
  user: vagrant
  become: yes
  become_method: sudo
  gather_facts: yes
  vars:
    env_name: "production"
    # archivematica-src role
    archivematica_src_install_devtools: "no"
    archivematica_src_am_version: "stable/1.8.x"
    archivematica_src_ss_version: "stable/0.13.x"
    archivematica_src_ss_gunicorn: "true"
    archivematica_src_am_dashboard_gunicorn: "true"
    archivematica_src_am_multi_venvs: "yes"

    # reset setup vars, commented out here, uncomment if needed
    #archivematica_src_reset_am_all: "true"
    #archivematica_src_reset_ss_db: "true"

    # elasticsearch role, general settings
    # (instance specific settings are in the playbook )
    es_scripts: false
    es_templates: false
    es_version_lock: false
    es_heap_size: 348m
    es_major_version: "1.7"
    es_version: "1.7.6"
    es_start_service: true
    es_java_install: true
    update_java: true
    es_restart_on_change: true
    es_allow_downgrades: false
    es_enable_xpack: false
    es_xpack_features: []
    # Db options
    archivematica_src_am_db_host: localhost
    archivematica_src_am_db_name: "MCP"
    archivematica_src_am_db_user: "{{ samvera_db_user }}"
    archivematica_src_am_db_password: "{{ samvera_db_password }}"
    archivematica_src_am_migrate_from_v1_4: False
    archivematica_src_ss_migrate_from_v0_7: False
    archivematica_src_am_create_db: True
    archivematica_src_am_create_dbuser: True
    archivematica_src_am_wait_local_mysql: True

    archivematica_src_reset_mcpdb: True
    archivematica_src_reset_shareddir: True
    archivematica_src_reset_es: True
    archivematica_src_reset_am_all: True
    archivematica_src_reset_ss_db: True


    # AM configure vars
    archivematica_src_configure_dashboard: "yes"
    archivematica_src_configure_ss: "yes"
    archivematica_src_configure_ss_user: "admin"
    archivematica_src_configure_ss_password: "{{ samvera_admin_password }}"
    archivematica_src_configure_ss_email: "{{ samvera_admin_user }}"
    archivematica_src_configure_am_user: "admin"
    archivematica_src_configure_am_password: "{{ samvera_admin_password }}"
    archivematica_src_configure_am_email: "{{ samvera_admin_user }}"
    nginx_auth_basic_files:
      demo:
        - foo:$apr1$mEJqnFmy$zioG2q1iDWvRxbHuNepIh0 # foo:demo , generated by : htpasswd -nb foo demo
        - bar:$apr1$H2GihkSo$PwBeV8cVWFFQlnAJtvVCQ. # bar:demo , generated by : htpasswd -nb bar demo

  pre_tasks:
    - name: "Install SELinux related python packages"
      become: "yes"
      yum:
         name: "{{ item }}"
         state: "present"
      with_items:
        - libsemanage-python
        - policycoreutils-python

    - name: "SELinux: Allow nginx connections to Gunicorn"
      become: "yes"
      seboolean:
        name: "httpd_can_network_connect"
        state: "yes"
        persistent: "yes"
      when: ansible_selinux.status == "enabled"

    - name: "SELinux: Allow nginx to connect to MySQL"
      become: "yes"
      seboolean:
        name: "httpd_can_network_connect_db"
        state: "yes"
        persistent: "yes"
      when: ansible_selinux.status == "enabled"

    - name: "SELinux: Allow nginx to change system limits"
      become: "yes"
      seboolean:
        name: "httpd_setrlimit"
        state: "yes"
        persistent: "yes"
      when: ansible_selinux.status == "enabled"

    - name: "SELinux: Allow nginx to use ports 8000 and 8001"
      become: "yes"
      seport:
        ports: "8000,8001"
        proto: "tcp"
        setype: "http_port_t"
        state: "present"
      when: ansible_selinux.status == "enabled"

    - name: "Ensure pip, setuptools, virtualenv are not installed from packages"
      package:
        name: "{{ item }}"
        state: "absent"
      with_items:
        - "python-pip"
        - "python2-pip"
        - "python-virtualenv"

    - name: "Mysql Server for local deploy"
      package:
        name: "{{ item }}"
        state: "present"
      with_items:
        - mariadb
        - mariadb-server
        - mariadb-libs
        - MySQL-python
        - perl-DBD-MySQL
    - name: Ensure MySQL is started and enabled on boot.
      service: "name=mysqld state=started enabled=true"

    - name: Create mysql user
      mysql_user:
        name: "{{ archivematica_src_am_db_user }}"
        password: "{{ archivematica_src_am_db_password }}"
        priv: '*.*:ALL'
        state: present
  roles:
    - { role: "elastic.elasticsearch",
        tags: ["elasticsearch"],
        become: "yes",
        # instance specific settings here, general settings in host_vars
        es_instance_name: "node1",
        es_data_dirs: "/opt/elasticsearch/data",
        es_log_dir: "/opt/elasticsearch/logs",
        es_work_dir: "/opt/elasticsearch/temp",
        es_config: {
          node.name: "node1",
          cluster.name: "cluster1",
          http.port: 9200,
          transport.tcp.port: 9300,
          node.data: true,
          node.master: true,
          bootstrap.mlockall: true,
          discovery.zen.ping.multicast.enabled: false,
          http.max_content_length: 1024mb
          },
        when: "archivematica_src_search_enabled|bool",
      }
    # comes from base image
    #- { role: "artefactual.clamav", tags: ["clamav"], become: "yes" }
    - { role: "artefactual.gearman", tags: ["gearman"], become: "yes" }
    - { role: "artefactual.nginx", tags: ["nginx"], become: "yes" }
    - { role: "artefactual.archivematica-src", tags: ["archivematica-src"], become: "yes" }

  tasks:
    - name: "change home dir perms (to make transfer source visible)"
      command: "chmod 755 $HOME"
      tags: "homeperms"
      become: "no"

    - name: "S3fs"
      become: "yes"
      yum:
         name: "{{ item }}"
         state: "present"
      with_items:
        - s3fs-fuse
